
# Folder Structure
# -------------------------------------------
Root 
    Project 
        Build 
        Workspace (src) 
            Package 
                Node 


# Folder Structure Example
# ---------------------------------------------
AutonomousRobots 
    HW3 (Project)
        Build 
        src (workspace packages)
            ar_hw3 (package)
                package.xml
                setup.cfg
                setup.py
                license

                turtle_spiral (Node)
                    init.py
                    turtle_spiral.py

# ---------------------------------------------

# Create the Root, Project and Workspace folders, src is the standard workspace name
cd <root-folder>
mkdir -p /<project_folder_name>/src

# create a package while in the Workspace src folder
ros2 pkg create --build-type ament_python --license Apache-2.0 <desired-package-name>

# Add your Node code next to the __init__.py file in /package_name/package_name

# add dpendencies from code to package.xml
<depend>[name_of_dependency]<depend>
# e.g. 
<depend>std_msgs</depend>

# add entry points to setup.py
'<common_name> = package_name.node_file_name:function_name'
# e.g. 
'turtle_spiral = ar_hw3.turtle_spiral:main',

# check setup.cfg and see if there are any errors

# download dependencies at the project folder 
rosdep install -i --from-path src --rosdistro humble -y

# Build your package
colcon build --packages-select <package_name>

# ---------------------------------------------
# To use the package in the terminal after building

# Navigate to the project directory
cd <project-name>

# source package
source install/setup.bash

# run the node
ros2 run <package_name> <node_file_name>
#e.g.  
ros2 run ar_hw3 turtle_spiral
